const express = require("express");
const app = express();
const fs = require("fs");
const port = 8000;
const multer = require('multer')
const upload = multer({ dest: 'public/pics' })

app.set('view-engine', 'ejs')

app.use(express.static("public"));
app.use(express.json());
app.get("/gettodo", (req, res) => {

    readFile().then(function (data) {
        res.json(data);
    })
        .catch(function (err) {
            console.log(err)
        })
    // fs.readFile("./data.txt","utf-8", function(err,data){
    //     let todos;
    //     if(data.length === 0){
    //         todos = []
    //     }
    //     else{
    //         todos = JSON.parse(data);
    //     }
    //     // todos.push(req.body);d
    //     res.json(todos);
    // })
})

// app.post("/pic", upload.single('task_pic'), function(req,res,next){
//     console.log(req.file)
//     res.send()
// })

app.post("/savetodo", upload.single('task_pic'), function (req, res) {
    // console.log(req.body)
    // console.log("uploaded file")
    // // console.log(req.file)
    // // res.end();
    let todos =
    {
        task: req.body.task,
        id: req.body.id,
        ischecked: req.body.ischecked,
        task_pic: req.file.filename

    }
    saveFile(todos).then(function () {
        // console.log(todos)
        // res.json(todos)
        console.log(req.file.filename)
        res.send(req.file.filename)
    })
        .catch(function () {
            console.log("error")
        })
    // console.log(req.body)
    // fs.readFile("./data.txt","utf-8", function(err,data){
    //     let todos;
    //     if(data.length === 0){
    //         todos = []
    //     }
    //     else{
    //         todos = JSON.parse(data);
    //     }
    //     // req.body
    //     todos.push(
    //         {
    //             task:req.body.task,
    //             id:req.body.id,
    //             ischecked: req.body.ischecked,
    //             task_pic:req.file.filename            

    //         });

    //     fs.writeFile("./data.txt",JSON.stringify(todos),function(err){
    //       res.send(req.file.filename)
    //         // res.end();  
    //     })
    // })
})

app.get("/deletetodo:id", function (req, res) {
    var todos;
    let id = req.params['id'];

    console.log(typeof id)
    console.log("id = " + id);
    readFile().then(function (todos) {
        // res.json(data);
        var count = 0
        todos.forEach(function (todo) {
            console.log(count)
            console.log(todo.id)
            console.log(id)
            console.log(todo.id === Number(id))
            if (todo.id === id) {
                console.log("Delete");
                todos.splice(count, 1);
                // fs.writeFile("./data.txt",JSON.stringify(todos),function(err){
                //     res.end();  
                // })
                writeFile(todos)
            }
            else
                count++;
            // todos = JSON.parse(data);
        })

        // fs.readFile("./data.txt","utf-8", function(err,data){
        //     todos = JSON.parse(data);
        //     console.log(todos);
        //     var count = 0;
        //     todos.forEach(function(todo){
        //         console.log(count)
        //         console.log(todo.id)
        //         console.log(id)
        //         console.log(todo.id === Number(id))
        //         if(todo.id === id){
        //             console.log("Delete");
        //             todos.splice(count,1);
        //             fs.writeFile("./data.txt",JSON.stringify(todos),function(err){
        //                 res.end();  
        //             })
        //         }
        //         else    
        //             count++;
        //     });
        //     // console.log(todos);
        // });
    }).then(function () {
        res.end()
    })
})
app.get("/check:id", function (req, res) {
    // var todos;
    let id = req.params['id'];
    readFile().then(function (todos) {
        todos.forEach(function (todo) {
            if (todo.id === id) {
                console.log("D");
                console.log(typeof todo.ischecked)
                if (todo.ischecked === "false")
                    todo.ischecked = "true";
                else
                    todo.ischecked = "false";
                writeFile()
            }
            else
                count++;
        }).then(function () {
            res.send(todo.ischecked);
            // res.end()
        })
        // fs.readFile("./data.txt","utf-8", function(err,data){
        //     todos = JSON.parse(data);
        //     console.log(todos);
        //     var count = 0;
        //     todos.forEach(function(todo){
        //         // console.log(count)
        //         // console.log(todo.id)
        //         // console.log(id)
        //         // console.log(todo.id === Number(id))
        //         if(todo.id === id){
        //             console.log("D");
        //             console.log(typeof todo.ischecked)
        //             if(todo.ischecked === "false")
        //                 todo.ischecked = "true";
        //             else
        //                 todo.ischecked = "false";
        //             fs.writeFile("./data.txt",JSON.stringify(todos),function(err){
        //                 res.send(todo.ischecked);  
        //             })
        //         }
        //         else    
        //             count++;
        //     });
        //     // console.log(todos);
        // });
    })
})


    app.listen(port, () => {
        console.log("listed on " + port);
    })


    function readFile() {
        return new Promise(function (resolve, reject) {
            fs.readFile("./data.txt", "utf-8", function (err, data) {
                // let todos;
                // if(data.length === 0){
                //     todos = []
                // }
                // else{
                //     todos = JSON.parse(data);
                // }
                // // todos.push(req.body);d
                // res.json(todos);
                if (err) {
                    reject(err)
                    return
                }
                if (!data) {
                    resolve([])
                    return
                }
                try {
                    resolve(JSON.parse(data))
                }
                catch (err) {
                    resolve([])
                }
            })
        })
    }

    function saveFile(todo) {
        return readFile().then(function (todos) {
            todos.push(todo)

            return writeFile(todos)

        })
    }

    function writeFile(todo) {
        return new Promise(function (resolve, reject) {
            fs.writeFile("./data.txt", JSON.stringify(todo), function (err) {
                if (err) {
                    reject(err)
                }
                else {
                    resolve()
                    // Promise.resolve('foo\n').then(response.end.bind(response)); 
                    // res.end()
                }
            })
        })
    }

